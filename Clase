{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNuTDEJ2y8N7YBEX9tCp+Ti",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Zerberuz/clase3/blob/main/Clase\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "swSKN8P4T3Tn",
        "outputId": "ca324d72-1c25-44c8-993b-1d517305294d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Por favor, ingresa tu nombre: Juan\n",
            "Ahora ingresa tu apellido: Reyes\n",
            "Ingresa el nombre de tu barrio: Cesario\n",
            "Finalmente, ingresa el nombre de tu ciudad: Cali\n",
            "Hola, Juan Reyes, bienvenido/a a Cesario, Cali!\n"
          ]
        }
      ],
      "source": [
        "#Funcion para solicitar informacion y mandar mensaje de bienvenida\n",
        "def solicitar_informacion():\n",
        "    nombre = input(\"Por favor, ingresa tu nombre: \")\n",
        "\n",
        "    apellido = input(\"Ahora ingresa tu apellido: \")\n",
        "\n",
        "    barrio = input(\"Ingresa el nombre de tu barrio: \")\n",
        "\n",
        "    ciudad = input(\"Finalmente, ingresa el nombre de tu ciudad: \")\n",
        "\n",
        "    print(\"Hola,\", nombre, apellido + \", bienvenido/a a\", barrio + \",\", ciudad + \"!\")\n",
        "\n",
        "solicitar_informacion()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def sumar_numeros():\n",
        " a = input(\"ingrese primer numero\")\n",
        " b = input(\"ingrese otro numero\")\n",
        " c = a + b\n",
        " print (\"la suma de\", a, \"y\", b, \"es:\", c)\n",
        "\n",
        "# Llamar a la función para sumar números\n",
        "sumar_numeros()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dXXLMqW_VOtg",
        "outputId": "6be869de-dd82-41d2-ba71-4992ae9ea2a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ingrese primer numero6\n",
            "ingrese otro numero9\n",
            "la suma de 6 y 9 es: 69\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import math\n",
        "\n",
        "def calcular_area_triangulo(base, altura):\n",
        "    return (base * altura) / 2\n",
        "\n",
        "def calcular_area_circulo(radio):\n",
        "    return math.pi * (radio ** 2)\n",
        "\n",
        "def calcular_area_cuadrado(lado):\n",
        "    return lado ** 2\n",
        "\n",
        "def main():\n",
        "    opcion = input(\"Selecciona la figura para calcular el área (triángulo / círculo / cuadrado): \").lower()\n",
        "\n",
        "    if opcion == \"triangulo\":\n",
        "        base = float(input(\"Ingresa la longitud de la base del triángulo: \"))\n",
        "        altura = float(input(\"Ingresa la altura del triángulo: \"))\n",
        "        area = calcular_area_triangulo(base, altura)\n",
        "    elif opcion == \"circulo\":\n",
        "        radio = float(input(\"Ingresa el radio del círculo: \"))\n",
        "        area = calcular_area_circulo(radio)\n",
        "    elif opcion == \"cuadrado\":\n",
        "        lado = float(input(\"Ingresa la longitud del lado del cuadrado: \"))\n",
        "        area = calcular_area_cuadrado(lado)\n",
        "    else:\n",
        "        print(\"Opción no válida.\")\n",
        "        return\n",
        "\n",
        "    print(f\"El área del {opcion} es: {area}\")\n",
        "\n",
        "main()"
      ],
      "metadata": {
        "id": "xjJuBLmgYYlU",
        "outputId": "35593526-3f57-4035-f09b-9a99cbc1e885",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Selecciona la figura para calcular el área (triángulo / círculo / cuadrado): circulo\n",
            "Ingresa el radio del círculo: 5\n",
            "El área del circulo es: 78.53981633974483\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def calcular_resistencia_en_paralelo(resistencias):\n",
        "    inverso_total = 0\n",
        "    for resistencia in resistencias:\n",
        "        inverso_total += 1 / resistencia\n",
        "    resistencia_total = 1 / inverso_total\n",
        "    return resistencia_total\n",
        "\n",
        "# Pedir al usuario que ingrese los valores de las resistencias\n",
        "num_resistencias = int(input(\"Ingrese el número de resistencias: \"))\n",
        "resistencias = []\n",
        "for i in range(num_resistencias):\n",
        "    resistencia = float(input(f\"Ingrese el valor de la resistencia {i+1} en ohmios: \"))\n",
        "    resistencias.append(resistencia)\n",
        "\n",
        "# Calcular la resistencia total en paralelo\n",
        "resistencia_total = calcular_resistencia_en_paralelo(resistencias)\n",
        "print(resistencia_total)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gOt1qeZA1jpy",
        "outputId": "a378708e-ab39-4ffe-e4f2-47bc37369ee3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el número de resistencias: 5\n",
            "Ingrese el valor de la resistencia 1 en ohmios: 1000\n",
            "Ingrese el valor de la resistencia 2 en ohmios: 2200\n",
            "Ingrese el valor de la resistencia 3 en ohmios: 1000\n",
            "Ingrese el valor de la resistencia 4 en ohmios: 2200\n",
            "Ingrese el valor de la resistencia 5 en ohmios: 500\n",
            "203.7037037037037\n"
          ]
        }
      ]
    }
  ]
}